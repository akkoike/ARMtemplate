{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName":{
      "type":"string",
      "defaultValue": "vmsstest001",
      "metadata":{
        "description":"String used as a base for naming resources. Must be 3-57 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 57
    },
    "instanceCount": {
      "defaultValue": 2,
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (1000 or less)."
      },
      "maxValue": 1000
    },
	  "adminUsername": {
      "defaultValue": "azure01",
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "sshKeyData": {
      "type": "string",
      "defaultValue": "ssh-rsa ",
      "metadata": {
            "description": "SSH rsa public key file as a string , ex.(ssh-rsa AA----nFnJ)"
      }
    },
	  "addressPrefix": {
      "defaultValue": "192.168.0.0/16",
      "type": "string",
      "metadata": {
        "description": "vNET address range"
      }
    },
	  "subnetPrefix": {
      "defaultValue": "192.168.0.0/24",
      "type": "string",
      "metadata": {
        "description": "ALB and vmss  subnet address range that must be in vNET address range"
      }
    },
    "imageId": {
      "defaultValue": "/subscriptions/-YOUR SUBSCRIPTIONID-/resourceGroups/-RESOURCE GROUP NAME-/providers/Microsoft.Compute/images/-IMAGENAME-",
      "type": "string",
      "metadata": {
        "description": "input your resource id of generalized image with resource group name"
      }
    },
    "appGwSubnetPrefix": {
      "defaultValue": "192.168.1.0/24",
      "type": "string",
      "metadata": {
        "description": "Application Gateway subnet address range that must be in vNET address range"
      }
    }
  },
  "variables": {
    "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('vmssName'))]",
    "virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
    "albpublicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
    "albPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('albpublicIPAddressName'))]",
    "subnetName": "[concat(variables('namingInfix'), 'subnet')]",
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "imageReference": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "7.3",
      "version": "latest"
    },
    "autoscalesettings_autoscaletst_name": "[concat( parameters('vmssName'), '-auto' )]",
    "virtualNetworkID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "vmss1SubnetRef": "[concat(variables('virtualNetworkId'),'/subnets/',variables('subnetName'))]",
    "vmss1LbName": "[concat(parameters('vmssName'), '-Lb')]",
    "vmss1LbId": "[resourceId('Microsoft.Network/loadBalancers',variables('vmss1LbName'))]",
    "vmss1LbFeName": "[concat( variables('vmss1LbName'), '-frontendIpConfig' )]",
    "vmss1LbFeRef": "[concat(variables('vmss1LbId'), '/frontendIPConfigurations/', variables('vmss1LbFeName'))]",
    "vmss1LbBePoolName": "[concat( variables('vmss1LbName'), '-backendPool' )]",
    "vmss1LbBePoolRef": "[concat(variables('vmss1LbId'), '/backendAddressPools/', variables('vmss1LbBePoolName'))]",
    "vmss1LbNatPoolName": "[concat( variables('vmss1LbName'), '-natPool' )]",
    "vmss1LbNatPoolRef":"[concat(variables('vmss1LbId'), '/inboundNatPools/', variables('vmss1LbNatPoolName'))]",
    "natStartPort": 50000,
    "natEndPort": 50119,
    "natBackendPort": 22,
    "appGwPublicIPAddressName": "[concat(variables('namingInfix'), 'appGwPip')]",
    "appGwName": "[concat(variables('namingInfix'), 'appGw')]",
    "appGwPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appGwPublicIPAddressName'))]",
    "appGwID": "[resourceId('Microsoft.Network/applicationGateways',variables('appGwName'))]",
    "appGwSubnetName": "[concat(variables('namingInfix'),'appGwSubnet')]",
    "appGwSubnetID": "[concat(variables('virtualNetworkID'),'/subnets/',variables('appGwSubnetName'))]",
    "appGwFrontendPort": 80,
    "appGwBackendPort": 80,
    "appGwBePoolName": "[concat(variables('namingInfix'), 'appGwBepool')]",
    "computeApiVersion": "2017-03-30",
    "networkApiVersion": "2017-04-01"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          },
          {
            "name": "[variables('appGwSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('appGwSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('appGwPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('albPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "name": "[variables('appGwName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('appGwPublicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "Standard_Large",
          "tier": "Standard",
          "capacity": "10"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGwIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('appGwSubnetID')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('appGwPublicIPAddressID')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGwFrontendPort",
            "properties": {
              "Port": "[variables('appGwFrontendPort')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appGwBePoolName')]",
            "properties": {
              "provisioningState": "Succeeded",
              "backendIPConfigurations": [
                  {
                      "id": "[concat(resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('namingInfix')), '/virtualMachines/0/networkInterfaces/lbandappgwNic/ipConfigurations/lbandappgwIpConfig')]"
                  },
                  {
                      "id": "[concat(resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('namingInfix')), '/virtualMachines/1/networkInterfaces/lbandappgwNic/ipConfigurations/lbandappgwIpConfig')]"
                  }
              ],
              "backendAddresses": []
          }

          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGwBackendHttpSettings",
            "properties": {
              "Port": "[variables('appGwBackendPort')]",
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGwHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('appGwID'), '/frontendIPConfigurations/appGwFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('appGwID'), '/frontendPorts/appGwFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('appGwID'), '/httpListeners/appGwHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('appGwID'), '/backendAddressPools/', variables('appGwBePoolName'))]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('appGwID'), '/backendHttpSettingsCollection/appGwBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    },
            {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('vmss1LbName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "testfrontend",
                        "properties": {
                          "publicIPAddress": {
                                "id": "[variables('albPublicIPAddressID')]"
                          }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('vmss1LbBePoolName')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('vmss1LbNatPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',variables('vmss1LbName')),'/frontendIPConfigurations/testfrontend')]"
                            },
                            "protocol": "tcp",
                            "frontendPortRangeStart": "[variables('natStartPort')]",
                            "frontendPortRangeEnd": "[variables('natEndPort')]",
                            "backendPort": "[variables('natBackendPort')]"
                        }
                    }
                ]
            }
        },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('namingInfix')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/applicationGateways/', variables('appGwName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "false",
	    	"singlePlacementGroup": "true",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk" : {
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk" : {
                  "storageAccountType" : "Standard_LRS"
              }
            },
            "imageReference": { 
              "id": "[parameters('imageId')]"
              } 
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",

                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                            ]
                        }
                    }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                        },
                        "ApplicationGatewayBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('appGwName'), '/backendAddressPools/', variables('appGwBePoolName'))]"
                          }
                        ],
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('vmss1LbBePoolRef')]"
                          }
                          ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[variables('vmss1LbNatPoolRef')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "testas",
      "type": "Microsoft.Insights/autoscaleSettings",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-04-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]"
      ],
      "properties": {
        "name": "testas",
        "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('namingInfix'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "testprofile0",
            "capacity": {
              "minimum": "2",
              "maximum": "5",
              "default": "2"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('namingInfix'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 60.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('namingInfix'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 50.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              }
            ]
          }
        ]
      }
    }
  ]
}
